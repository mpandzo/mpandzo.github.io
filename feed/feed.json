{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "Mirza Pandzo",
  "language": "en",
  "home_page_url": "https://mirzapandzo.com/",
  "feed_url": "https://mirzapandzo.com/feed/feed.json",
  "description": "I enjoy writing about my experiences as a software developer.",
  "author": {
    "name": "Mirza Pandzo",
    "url": "https://mirzapandzo.com"
  },
  "items": [{
      "id": "https://mirzapandzo.com/posts/serverless-architecture-real-world-examples/",
      "url": "https://mirzapandzo.com/posts/serverless-architecture-real-world-examples/",
      "title": "Serverless Architecture - Real world examples",
      "content_html": "<p>The term serverless has been around for the past 7 or 8 years. It's one of a set of words people equate with cutting edge and modern stacks (I am talking about you jamstack, headless, cloudnative, eventdrivenarchitecture etc).</p>\n<p>It's often defined as the concept of &quot;enabling users to write and deploy code without the worry of the underlying infrastructure&quot;.</p>\n<p>In layman's terms, serverless works as follows:</p>\n<ul>\n<li>you configure an environment with a few clicks</li>\n<li>you deploy your code (git push usually) and publish your application (button click usually)</li>\n<li>you pay only for the resources your application uses</li>\n<li>you don't worry about configuring and managing servers</li>\n<li>if your traffic spikes, your infrastructure scales to handle the surge</li>\n<li>if a function instance fails, it's replaced by another instance</li>\n</ul>\n<p>You may have seen the above written many times over. It's very much common knowledge - in dev circles at least.</p>\n<p>You'll also see many different approaches to doing serverless.</p>\n<p>Vercel, Netlify, Render and other PaaS (Platform as a Service) providers all have their flavor of serverless functions available for use. SST.dev and Serverless Framework are just two frameworks built on top of this technology. Of course, you can also use AWS Lambda, Google Cloud Functions and Microsoft Azure Functions directly to the same effect.</p>\n<p>But, many times, real world examples are omitted from the discussion. When does serverless shine?</p>\n<h2 id=\"image-resizing-on-the-fly\" tabindex=\"-1\">Image resizing on the fly <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/serverless-architecture-real-world-examples/#image-resizing-on-the-fly\" aria-hidden=\"true\">#</a></h2>\n<p>We were asked to refactor a very large website (100 million+ page views per month). The refactor aimed to optimize performance and architect the codebase for scalability.</p>\n<p>Amongst a number of things we identified during a site audit that could potentially be improved was the way images stored in an S3 bucket were being handled.</p>\n<p>The legacy system optimized and resized images during image upload. This meant that any subsequent design changes that included image dimension changes required running a crob job to mass re-resize original images to match the newly defined dimensions. With potentially hundreds of thousands of image to resize, this was a huge drain on resources.</p>\n<p>We replaced this process with an AWS Lambda function that fires off of a failed S3 bucket endpoint request on demand.</p>\n<p>When an image that is requested from S3 is not found, the bucket routing sends the request to the API Gateway which in turn fires a Lambda function to server the request. The Lambda function resizes the images, stores it in S3 and serves the resized image. Any subsequent requests for the same image will simply hit the S3 bucket-stored image without further Lambda calls.</p>\n<p>Because of the scalable nature of AWS Lambda, this revised protocol is able to handle millions of requests without blinking an eye which is very different to running a cronjob for hundreds of thousands of entries.</p>\n<p>Though AWS has more recently improved their offering with the Serverless Image Handler <a href=\"https://aws.amazon.com/answers/web-applications/serverless-image-handler/\">[1]</a> you can still see the more pedestrian solution we used in the serverless-image-resizing archived repo <a href=\"https://mirzapandzo.com/posts/serverless-architecture-real-world-examples/#link-2\">[2]</a>.</p>\n<h2 id=\"handling-push-notifications-at-scale\" tabindex=\"-1\">Handling push notifications at scale <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/serverless-architecture-real-world-examples/#handling-push-notifications-at-scale\" aria-hidden=\"true\">#</a></h2>\n<p>An admin flow we implemented included the processing of gamified data for thousands of customers and the subsequent sending of push notifications (sms &amp; in-app) to each.</p>\n<p>We implemented a Lambda function to do the data processing. The Lambda function then deferred to AWS SNS (simple notification service) to handle the pushes.</p>\n<p>Once the Lambda completed it's processing it would mark the entry as completed.</p>\n<p>We had a simple progressbar display in the dashboard with a periodic check of the database to display progress.</p>\n<h2 id=\"event-tracking\" tabindex=\"-1\">Event tracking <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/serverless-architecture-real-world-examples/#event-tracking\" aria-hidden=\"true\">#</a></h2>\n<p>A client was using a bespoke event tracking script for tracking various user initiated events. This script turned out to be a bottleneck when handling thousands of requests.</p>\n<p>We rewrote the functionality by using AWS Lambda. Similar to the original script, the Lambda function gets triggered on specific events, such as a user clicking a button or submitting a form. However, because of the nature of Lambda functions, scaling is not an issue, and the bottleneck is removed.</p>\n<p>I hope examples from our own development journey help you get a better understanding of the benefits of utilizing serverless technology for more optimized performance.</p>\n<p>Links:</p>\n<ul>\n<li>[1] <a id=\"link-1\" href=\"https://aws.amazon.com/answers/web-applications/serverless-image-handler/\">Serverless Image Handler</a></li>\n<li>[2] <a id=\"link-2\" href=\"https://github.com/amazon-archives/serverless-image-resizing\">serverless-image-resizing</a></li>\n</ul>\n",
      "date_published": "2023-01-15T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/elasticbeanstalk-php-settings-and-the-frustratingly-confusing-guide-to-eb-deploy/",
      "url": "https://mirzapandzo.com/posts/elasticbeanstalk-php-settings-and-the-frustratingly-confusing-guide-to-eb-deploy/",
      "title": "ElasticBeanstalk, PHP settings and the frustratingly confusing guide to eb deploy",
      "content_html": "<p>I'll be honest. I love using AWS. <code>eb deploy</code> is my go to command. The ElasticBeanstalk cloud ecosystem is amazing and I would find it hard to do my day job without it.</p>\n<p>There is something to be said about the merry-go-round you are sent on when you need to change, upgrade, migrate (insert operative word here) a service your application relies on.</p>\n<p>I recently <a href=\"https://mirzapandzo.com/posts/amazon-linux-2-elasticbeanstalk-and-apache-httpd\">moved a website from an Amazon Linux AMI to an Amazon Linux 2 platform</a>. Along the way, I found out that Apache HTTPD was no longer the default proxy server [<a href=\"https://mirzapandzo.com/posts/elasticbeanstalk-php-settings-and-the-frustratingly-confusing-guide-to-eb-deploy/#link-1\">1</a>] used on ElasticBeanstalk instances.</p>\n<p>Additionally, and randomly, the following php.ini settings can be configured via the <code>aws:elasticbeanstalk:container:php:phpini</code> option settings config namespace [<a href=\"https://mirzapandzo.com/posts/elasticbeanstalk-php-settings-and-the-frustratingly-confusing-guide-to-eb-deploy/#link-2\">2</a>]:</p>\n<ul>\n<li>Proxy server – The proxy server to use on your environment instances. By default, nginx is used.</li>\n<li>Document root – The folder that contains your site's default page. If your welcome page is not at the root of your source bundle, specify the folder that contains it relative to the root path. For example, /public if the welcome page is in a folder named public.</li>\n<li>Memory limit – The maximum amount of memory that a script is allowed to allocate. For example, 512M.</li>\n<li>Zlib output compression – Set to On to compress responses.</li>\n<li>Allow URL fopen – Set to Off to prevent scripts from downloading files from remote locations.</li>\n<li>Display errors – Set to On to show internal error messages for debugging.</li>\n<li>Max execution time – The maximum time in seconds that a script is allowed to run before the environment terminates it.</li>\n</ul>\n<p>E.g. you would set max_execution_time to 1000 by adding the following to your env.config file inside your .ebextensions folder:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">option_settings</span><span class=\"token punctuation\">:</span><br />  <span class=\"token key atrule\">aws:elasticbeanstalk:container:php:phpini</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">max_execution_time</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span></code></pre>\n<p>However, if you mistakenly assume you can also override <code>post_max_size</code>, you will be presented with a deploy error during <code>eb deploy</code>:</p>\n<pre><code>2022-11-01 01:05:31    ERROR   Invalid option specification (Namespace: 'aws:elasticbeanstalk:container:php:phpini', OptionName: 'post_max_size'): Unknown configuration setting.\n</code></pre>\n<p>Instead, to override other php.ini settings not included in the aforementioned list, you have to use the files block of a configuration file (e.g. .ebextensions/php-ini.config) to add a .ini file to /etc/php.d/:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">files</span><span class=\"token punctuation\">:</span><br />  <span class=\"token key atrule\">\"/etc/php.d/project.ini\"</span> <span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"000644\"</span><br />    <span class=\"token key atrule\">owner</span><span class=\"token punctuation\">:</span> root<br />    <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> root<br />    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br />      upload_max_filesize = 64M<br />      post_max_size = 64M<br />      max_input_time = 1000<br />      html_errors = \"On\"<br />      display_startup_errors = \"On\"</span></code></pre>\n<p>Similarly, you would use the same approach to enable a PHP extension like Mongo [<a href=\"https://mirzapandzo.com/posts/elasticbeanstalk-php-settings-and-the-frustratingly-confusing-guide-to-eb-deploy/#link-3\">3</a>]:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">files</span><span class=\"token punctuation\">:</span><br />  <span class=\"token key atrule\">\"/etc/php.d/99mongo.ini\"</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">mode</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"000644\"</span><br />    <span class=\"token key atrule\">owner</span><span class=\"token punctuation\">:</span> root<br />    <span class=\"token key atrule\">group</span><span class=\"token punctuation\">:</span> root<br />    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\"><br />      extension=mongo.so</span></code></pre>\n<p>Am I the only one frustrated with having to bore through multiple AWS docs articles to get to the bottom of the above while articles like <a href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/php-hawordpress-tutorial.html\">Deploying a high-availability WordPress website with an external Amazon RDS database to Elastic Beanstalk</a> don't touch on the <code>eb deploy</code> aspect at all?</p>\n<p>Links:</p>\n<ul>\n<li>[1] <a id=\"link-1\" href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-linux-extend.html\">Extending Elastic Beanstalk Linux platforms</a></li>\n<li>[2] <a id=\"link-2\" href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_PHP.container.html\">Using the Elastic Beanstalk PHP platform</a></li>\n<li>[3] <a id=\"link-3\" href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/php-configuration-phpini.html\">Extending php.ini</a></li>\n</ul>\n",
      "date_published": "2022-11-01T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/amazon-linux-2-elasticbeanstalk-and-apache-httpd/",
      "url": "https://mirzapandzo.com/posts/amazon-linux-2-elasticbeanstalk-and-apache-httpd/",
      "title": "Amazon Linux 2 ElasticBeanstalk and Apache HTTPD",
      "content_html": "<p>I recently had to migrate a legacy website from Amazon Linux AMI to the Amazon Linux 2 platform as the former is deprecated and no longer supports managed updates on AWS.</p>\n<p>There is no automated way to do the migration so I created a new environment and deployed the application there, then CNAMEd the domain name to the new load balancer address.</p>\n<p>Things went along smoothly enough with pretty much all configuration settings being compatible and transferrable. However, once the new environment was created and once my deploy script was done, I got 404 errors everywhere.</p>\n<p>Interestingly enough, I noticed the 404 errors were being thrown by Nginx:</p>\n<pre class=\"language-html\"><code class=\"language-html\">404 Not Found<br />nginx/1.20.0</code></pre>\n<p>A bit of digging led me to the revelation that Amazon Linux 2 uses nginx as it's default proxy server [<a href=\"https://mirzapandzo.com/posts/amazon-linux-2-elasticbeanstalk-and-apache-httpd/#link-1\">1</a>]:</p>\n<pre class=\"language-markup\"><code class=\"language-markup\">Elastic Beanstalk uses nginx as the default reverse proxy to map your application to your Elastic Load Balancing load balancer.</code></pre>\n<p>That was no good for me as I wanted to use the existing site's .htaccess file for url rewrite overrides and I didn't want to try and translate each .htaccess rule to an equivalent nginx.conf rule.</p>\n<p>Luckily, AWS allows you to let Apache's HTTPD proxy server do your proxying. To do this, you have to create a config file inside your .ebextensions folder (e.g. .ebextensions/httpd-proxy.config) with the following content:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">option_settings</span><span class=\"token punctuation\">:</span><br />  <span class=\"token key atrule\">aws:elasticbeanstalk:environment:proxy</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">ProxyServer</span><span class=\"token punctuation\">:</span> apache</code></pre>\n<p>Links:</p>\n<ul>\n<li>[1] <a id=\"link-1\" href=\"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/platforms-linux-extend.html\">Extending Elastic Beanstalk Linux platforms</a></li>\n</ul>\n",
      "date_published": "2022-10-31T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/docker-compose-for-wordpress-permission-denied-and-uid-1000/",
      "url": "https://mirzapandzo.com/posts/docker-compose-for-wordpress-permission-denied-and-uid-1000/",
      "title": "Docker compose for WordPress - Permission denied and uid 1000",
      "content_html": "<p>I've got a simple docker-compose.yml file for working on WordPress projects locally.</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.5\"</span><br /><br /><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span><br /><br />  <span class=\"token key atrule\">mysql</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> wp<span class=\"token punctuation\">-</span>mysql<br />    <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br />    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span><br />    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always<br />    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br />      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> root<br />      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> wordpress<br />      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> wordpress<br />      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress<br /><br />  <span class=\"token key atrule\">wordpress</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> wp<span class=\"token punctuation\">-</span>wordpress<br />    <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br />    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> mysql<br />    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wordpress<span class=\"token punctuation\">:</span>latest<br />    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> ./<span class=\"token punctuation\">:</span>/var/www/html<br />    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8080:80\"</span><br />    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always<br /><br />  <span class=\"token key atrule\">phpmyadmin</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> wp<span class=\"token punctuation\">-</span>phpmyadmin<br />    <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br />    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> phpmyadmin/phpmyadmin<br />    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> mysql<br />    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> 8181<span class=\"token punctuation\">:</span><span class=\"token number\">80</span><br />    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br />      <span class=\"token key atrule\">MYSQL_USERNAME</span><span class=\"token punctuation\">:</span> root<br />      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> root<br />      <span class=\"token key atrule\">MYSQL_PORT_3306_TCP_ADDR</span><span class=\"token punctuation\">:</span> mysql<br />      <span class=\"token key atrule\">PMA_HOST</span><span class=\"token punctuation\">:</span> mysql</code></pre>\n<p>I've used this without any issues on my MacBook Air by running <code>docker-compose up</code>.</p>\n<p>When I recently tried to do the same on a windows machine running WSL (Windows Subsystem for Linux) and I tried to upgrade to the latest version of WordPress, I faced the following error in WordPress dashboard:</p>\n<pre class=\"language-text\"><code class=\"language-text\">Update WordPress<br />Downloading update from https://downloads.wordpress.org/release/wordpress-6.0.3-new-bundled.zip…<br /><br />The authenticity of wordpress-6.0.3-new-bundled.zip could not be verified as no signature was found.<br /><br />Unpacking the update…<br /><br />Warning: copy(/var/www/html/wp-admin/includes/update-core.php): failed to open stream: Permission denied in /var/www/html/wp-admin/includes/class-wp-filesystem-direct.php on line 309<br />The update cannot be installed because we will be unable to copy some files. This is usually due to inconsistent file permissions.: wp-admin/includes/update-core.php<br /><br />Installation failed.</code></pre>\n<p>In order to see what permissions are set up inside the /var/www/html that may be causing this, I bashed into the container with the following command:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> -ti wp-wordpress <span class=\"token function\">bash</span></code></pre>\n<p>The result and subsequent <code>ls -la</code> listing looks like this:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">root@6eaac5e083f5:/var/www/html<span class=\"token comment\"># ls -la</span><br />drwxr-xr-x  <span class=\"token number\">8</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">4096</span> Oct <span class=\"token number\">26</span> 01:39 <span class=\"token builtin class-name\">.</span><br />drwxr-xr-x  <span class=\"token number\">1</span> root root   <span class=\"token number\">4096</span> Oct  <span class=\"token number\">5</span> 07:09 <span class=\"token punctuation\">..</span><br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">1051</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> .htaccess<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">1812</span> Oct <span class=\"token number\">26</span> 01:39 docker-compose.yml<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>    <span class=\"token number\">405</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> index.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>  <span class=\"token number\">19915</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> license.txt<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">7346</span> Oct <span class=\"token number\">20</span>  <span class=\"token number\">2021</span> readme.html<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">5626</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> readme.md<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">7165</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-activate.php<br />drwxr-xr-x  <span class=\"token number\">9</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">4096</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-admin<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>    <span class=\"token number\">351</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-blog-header.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">2328</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-comments-post.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">3004</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-config-sample.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">5907</span> Jun <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-config.php<br />drwxrwxrwx  <span class=\"token number\">6</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">4096</span> Jun <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-content<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">3939</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-cron.php<br />drwxr-xr-x <span class=\"token number\">25</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>  <span class=\"token number\">12288</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-includes<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">2496</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-links-opml.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">3900</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-load.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>  <span class=\"token number\">45463</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-login.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">8509</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-mail.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>  <span class=\"token number\">22297</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-settings.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>  <span class=\"token number\">31693</span> Aug <span class=\"token number\">25</span>  <span class=\"token number\">2021</span> wp-signup.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">4747</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> wp-trackback.php<br />-rw-r--r--  <span class=\"token number\">1</span> <span class=\"token number\">1000</span> <span class=\"token number\">1000</span>   <span class=\"token number\">3236</span> Apr <span class=\"token number\">30</span>  <span class=\"token number\">2021</span> xmlrpc.php<br />root@6eaac5e083f5:/var/www/html<span class=\"token comment\">#</span></code></pre>\n<p>From the above, I gathered that the files and folders were owned by user:group 1000:1000. Further reading lead to the finding that on most Linux systems UID:GUID of 1000:1000 is used for the first non-system account created. In addition, when volumes are mounted docker sets UID:GUID for volume mounted files and folders to the same. <a href=\"https://mirzapandzo.com/posts/docker-compose-for-wordpress-permission-denied-and-uid-1000/#link-1\">[1]</a>, <a href=\"https://mirzapandzo.com/posts/docker-compose-for-wordpress-permission-denied-and-uid-1000/#link-2\">[2]</a>.</p>\n<p>As a result, when the apache's www-data user tries to modify files or folders owned by 1000:1000 we face the issue described at the beginning of this post.</p>\n<p>To get around this I switched to building my WordPress image with the help of a Dockerfile where I change ownership of the files and folders to www-data:www-data.</p>\n<p>My modified docker-compose.yml file:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.5\"</span><br /><br /><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span><br /><br />  <span class=\"token key atrule\">mysql</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> wp<span class=\"token punctuation\">-</span>mysql<br />    <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br />    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span><br />    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always<br />    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br />      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> root<br />      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> wordpress<br />      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> wordpress<br />      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> wordpress<br /><br />  <span class=\"token key atrule\">wordpress</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> wp<span class=\"token punctuation\">-</span>wordpress<br />    <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br />    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> mysql<br />    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> local<span class=\"token punctuation\">-</span>wordpress<span class=\"token punctuation\">:</span>latest<br />    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span><br />      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> .<br />      <span class=\"token key atrule\">dockerfile</span><span class=\"token punctuation\">:</span> Dockerfile.WordPress<br />    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> ./<span class=\"token punctuation\">:</span>/var/www/html<br />    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8080:80\"</span><br />    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always<br /><br />  <span class=\"token key atrule\">phpmyadmin</span><span class=\"token punctuation\">:</span><br />    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> wp<span class=\"token punctuation\">-</span>phpmyadmin<br />    <span class=\"token key atrule\">privileged</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><br />    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> phpmyadmin/phpmyadmin<br />    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> mysql<br />    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span><br />      <span class=\"token punctuation\">-</span> 8181<span class=\"token punctuation\">:</span><span class=\"token number\">80</span><br />    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span><br />      <span class=\"token key atrule\">MYSQL_USERNAME</span><span class=\"token punctuation\">:</span> root<br />      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> root<br />      <span class=\"token key atrule\">MYSQL_PORT_3306_TCP_ADDR</span><span class=\"token punctuation\">:</span> mysql<br />      <span class=\"token key atrule\">PMA_HOST</span><span class=\"token punctuation\">:</span> mysql</code></pre>\n<p>Dockerfile (Dockerfile.WordPress) thanks to <a href=\"https://mirzapandzo.com/posts/docker-compose-for-wordpress-permission-denied-and-uid-1000/#link-3\">[3]</a>:</p>\n<pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> wordpress:latest</span><br /><br /><span class=\"token instruction\"><span class=\"token keyword\">ARG</span> UNAME=www-data</span><br /><span class=\"token instruction\"><span class=\"token keyword\">ARG</span> UGROUP=www-data</span><br /><span class=\"token instruction\"><span class=\"token keyword\">ARG</span> UID=1000</span><br /><span class=\"token instruction\"><span class=\"token keyword\">ARG</span> GID=1000</span><br /><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> usermod  --uid <span class=\"token variable\">$UID</span> <span class=\"token variable\">$UNAME</span></span><br /><span class=\"token instruction\"><span class=\"token keyword\">RUN</span> groupmod --gid <span class=\"token variable\">$GID</span> <span class=\"token variable\">$UGROUP</span></span></code></pre>\n<p>Links:</p>\n<ul>\n<li>[1] <a id=\"link-1\" href=\"https://github.com/moby/moby/issues/22114\">Docker sets GUID group and owner to 1000:1000 when volume is mounted</a></li>\n<li>[2] <a id=\"link-2\" href=\"https://github.com/davidalger/warden/issues/155\">On Linux Containers Expect UID/GID of 1000 Otherwise Cause Permissions Trouble</a></li>\n<li>[3] <a id=\"link-3\" href=\"https://stackoverflow.com/questions/55620273/docker-php-fpm-running-as-www-data\">Docker php fpm running as www data</a></li>\n</ul>\n",
      "date_published": "2022-10-26T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/",
      "url": "https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/",
      "title": "The tailwind dilemma - utility first vs semantic CSS",
      "content_html": "<p>TailwindCSS is an interesting piece of software. It seems to mainly elicit two types of reaction. People either love it and use it every day or they really hate it. There is no sitting on the fence.</p>\n<h2 id=\"why-is-that\" tabindex=\"-1\">Why is that? <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#why-is-that\" aria-hidden=\"true\">#</a></h2>\n<p>If you Google &quot;I hate TailwindCSS&quot; or &quot;I love TailwindCSS&quot; you'll find a myraid of lists of cons and pros, rants and eulogies - you'll read for hours. I won't bother trying to summarise the results, and even if I tried, I wouldn't do them justice.</p>\n<p>I will say this however, I believe the answer to the question above is in the framework's description found on the landing page above the fold:</p>\n<pre><code>A utility-first CSS framework packed with classes like flex, pt-4, text-center sand rotate-90 that can be composed to build any design, directly in your markup.\n</code></pre>\n<p>&quot;Utility-first... in your markup&quot;.</p>\n<p>TailwindCSS provides an idea of abstraction over CSS that some people love passionately and others really hate.</p>\n<p>But hang on a second, you'll say, that's what CSS classes do - abstract CSS rules - TailwindCSS did not invent CSS classes!</p>\n<p>And you would be right. TailwindCSS didn't invent CSS classes. What it does is champion the idea of abstracting away CSS rules without enforcing opinionated design decisions the way other &quot;real&quot; CSS frameworks do. It also does not enforce compartmentalisation the way <a href=\"https://maintainablecss.com/chapters/semantics/\">semantic CSS</a> does.</p>\n<p>Think about it, it's quite revolutionary!</p>\n<p>With the above in mind, I'd still like to touch on a few points.</p>\n<h2 id=\"when-to-use-it\" tabindex=\"-1\">When to use it? <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#when-to-use-it\" aria-hidden=\"true\">#</a></h2>\n<p>Prototypes are a given.</p>\n<p>You can 'npm install', set some rules in tailwind config and start working (on something meaningful) or you can use the CDN version:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">doctype</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.tailwindcss.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br />    tailwind<span class=\"token punctuation\">.</span>config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br />      <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />        <span class=\"token literal-property property\">extend</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />          <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />            <span class=\"token literal-property property\">clifford</span><span class=\"token operator\">:</span> <span class=\"token string\">'#da373d'</span><span class=\"token punctuation\">,</span><br />          <span class=\"token punctuation\">}</span><br />        <span class=\"token punctuation\">}</span><br />      <span class=\"token punctuation\">}</span><br />    <span class=\"token punctuation\">}</span><br />  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-3xl font-bold underline<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br />    Hello world!<br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Either approach gets you there so quickly it's simply not up for debate. Tailwind beats everything hands down!</p>\n<p>It is in complex projects however where TailwindCSS really shines.</p>\n<h3 id=\"skip-the-boring-stuff\" tabindex=\"-1\">Skip the boring stuff <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#skip-the-boring-stuff\" aria-hidden=\"true\">#</a></h3>\n<p>With TailwindCSS there is no need to ever write custom CSS to convert the most complex designs into HTML. Being able to skip writing raw CSS speeds up the development process tremendously! Think about it. The CSS part of your stack is 90% taken care of.</p>\n<p>In addition, there is something to say about not having to constantly weigh up the best or most in fashion naming convention (BEM, ABEM, SMACSS etc) - this is a God-send in itself.</p>\n<h3 id=\"but-what-about-maintenance\" tabindex=\"-1\">But what about maintenance? <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#but-what-about-maintenance\" aria-hidden=\"true\">#</a></h3>\n<p>Any developer worth their salt writing code in 2022 will use some form of component design (atomic, modular, whatever) to compose their application. As such, changing an element's CSS rules sitewide requires changing the CSS classes of only that one element.</p>\n<p>Now, think about a large application with hundreds of components written over a long period of time. The code will most likely have been written by different developers of different skill level each administering their own flavour of BEM or SMACSS. With TailwindCSS there is no such problem.</p>\n<h3 id=\"there-is-code-bloat\" tabindex=\"-1\">There is code bloat <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#there-is-code-bloat\" aria-hidden=\"true\">#</a></h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inline-block px-4 py-3<br />    text-sm font-semibold text-center<br />    text-white uppercase transition<br />    duration-200 ease-in-out bg-indigo-600<br />    rounded-md cursor-pointer<br />    hover:bg-indigo-700<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>vs</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Yes, the latter is easier on the eyes than the former.</p>\n<p>However, firstly, when abstracted in a component, the code bloat does not make much difference to every day development.</p>\n<p>And secondly, if you really, really want to, you can use Tailwind's <a href=\"https://tailwindcss.com/docs/reusing-styles#extracting-classes-with-apply\">@apply</a> feature to group sets of classes together to achieve the latter - though it's philosophically discouraged.</p>\n<p>Thirdly, with the former approach you can immediately see what the component display intent is, without having to look in the CSS file.</p>\n<p>And lastly, with the advent of http2 and faster, broadly adopted web speeds, inlining a bunch of CSS classes will not affect website performance. Tailwind's performance-focused setup leads to notoriously small CSS files, even for <a href=\"https://tailwindcss.com/docs/optimizing-for-production\">large websites</a> (&gt;10kb).</p>\n<h2 id=\"competion-does-it-better\" tabindex=\"-1\">Competion does it better? <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#competion-does-it-better\" aria-hidden=\"true\">#</a></h2>\n<p>I disagree strongly. Bootstrap, Foundation and Bulma (to name a few) are not TailwindCSS's competition. They are opinionated CSS frameworks on par with <a href=\"https://daisyui.com/\">daisyUI</a> (an opinionated CSS framework built on top of TailwindCSS).</p>\n<p>I was unable to find anything equivalent in Bulma. Foundation <a href=\"https://get.foundation/sites/docs-v5/utility-classes.html\">lacks</a> a complete set of utility classes. Bootstrap provides <a href=\"https://getbootstrap.com/docs/4.0/utilities/borders/\">utility classes</a> which you could probably use on their own for a utility-first development experience, however, their classes are more bloated than Tailwind's (.d-flex vs Tailwind's .flex etc) and as a result do not have the 'native' feel that Tailwind does. It almost feels like Bootstrap's utility classes are an afterthought to Tailwind's success.</p>\n<p>You will simply not find a better utility-first CSS framework than TailwindCSS.</p>\n<h2 id=\"wrapping-things-up\" tabindex=\"-1\">Wrapping things up <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/the-tailwind-dilemma-utility-first-vs-semantic-css/#wrapping-things-up\" aria-hidden=\"true\">#</a></h2>\n<p>In his review of <a href=\"https://mitjafelicijan.com/state-of-web-technologies-and-web-development-in-year-2022.html\">mach and jam stacks</a>, Mitja Felicijan writes</p>\n<pre><code>Tailwind is good for two types of developers. Tailwind is good for a complete noob or a senior developer. A complete noob doesn’t really care about inner workings of CSS, and a senior developer also doesn’t care about CSS.\n</code></pre>\n<p>I interpret his &quot;doesn't care&quot; as &quot;wants to not expend effort on&quot; - TailwindCSS takes away your need to expend effort on the inner workings of CSS without reducing your power to use it to full capacity.</p>\n<p>I strongly encourage you to try using TailwindCSS on one of your projects. I understand you may be reluctant. Coming from a semantic CSS development background myself it was very hard to make a conscious decision to switch to utility-first instead. Having done development with TailwindCSS for the past 2 years I can say I cannot imagine doing CSS any other way.</p>\n",
      "date_published": "2022-10-23T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/deploying-pocketbase-to-a-digital-ocean-droplet/",
      "url": "https://mirzapandzo.com/posts/deploying-pocketbase-to-a-digital-ocean-droplet/",
      "title": "Deploying PocketBase to a Digital Ocean droplet",
      "content_html": "<p>PocketBase is a beautiful single-file backend featuring a realtime database (SQLite), built-in user management, nice dashboard UI, configurable S3 storage and a simple REST API.</p>\n<p>To deploy PocketBase to Digital Ocean you have to create a new droplet first <a href=\"https://mirzapandzo.com/posts/deploying-pocketbase-to-a-digital-ocean-droplet/#link-1\">[1]</a>. When you fill in the form to create your server use the Ubuntu distribution and make sure you specify your SSH keys for ssh access <a href=\"https://mirzapandzo.com/posts/deploying-pocketbase-to-a-digital-ocean-droplet/#link-2\">[2]</a>. When the create process completes, note down the droplet's assigned IP address as you will use it later.</p>\n<p>Once the droplet is created, create an A record mapping the aforementioned assigned IP address to your domain name. You can do this at your domain name registrar if your DNS is managed there. Alternatively, you can point your domain name's nameservers to Digital Ocean and manage your DNS - and create your A record - there <a href=\"https://mirzapandzo.com/posts/deploying-pocketbase-to-a-digital-ocean-droplet/#link-3\">[3]</a>.</p>\n<p>Once your droplet is ready to go, ssh to it as the root user <code>ssh root@youripaddress</code>. Replace youripaddress with the IP address assigned to your droplet.</p>\n<p>Once connected, run apt update and apt upgrade to make sure your server is up to date.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">apt</span> update<br /><span class=\"token function\">apt</span> upgrade</code></pre>\n<p>While at it, install unzip as you'll need it to unzip the PocketBase archive.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">unzip</span></code></pre>\n<p>Configure the firewall to allow connections to ports 80 &amp; 443. Don't forget port 22 tcp access as you'll no longer be able to ssh to your droplet otherwise.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">22</span>/tcp<br /><span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">80</span><br /><span class=\"token function\">sudo</span> ufw allow <span class=\"token number\">443</span></code></pre>\n<p>Enable the ufw firewall.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> ufw <span class=\"token builtin class-name\">enable</span></code></pre>\n<p>You should see the following prompt and message:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">Command may disrupt existing <span class=\"token function\">ssh</span> connections. Proceed with operation <span class=\"token punctuation\">(</span>y<span class=\"token operator\">|</span>n<span class=\"token punctuation\">)</span>? y<br />Firewall is active and enabled on system startup</code></pre>\n<p>Now check that firewall is enabled and that the aforementioned ports are open:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">ufw status</code></pre>\n<p>You should see the following:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">Status: active<br /><br />To                         Action      From<br />--                         ------      ----<br /><span class=\"token number\">80</span>                         ALLOW       Anywhere<br /><span class=\"token number\">443</span>                        ALLOW       Anywhere<br /><span class=\"token number\">22</span>/tcp                     ALLOW       Anywhere<br /><span class=\"token number\">80</span> <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span>                    ALLOW       Anywhere <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><br /><span class=\"token number\">443</span> <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span>                   ALLOW       Anywhere <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span><br /><span class=\"token number\">22</span>/tcp <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span>                ALLOW       Anywhere <span class=\"token punctuation\">(</span>v6<span class=\"token punctuation\">)</span></code></pre>\n<p>Now that the basics are configured, you can cd into the /opt folder and install PocketBase <a href=\"https://mirzapandzo.com/posts/deploying-pocketbase-to-a-digital-ocean-droplet/#link-4\">[4]</a>. Please note the latest version of PocketBase is 0.7.10 at the time of writing. The example below targets the Linux amd64 OS and architecture.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> /opt<br /><span class=\"token function\">wget</span> https://github.com/pocketbase/pocketbase/releases/download/v0.7.10/pocketbase_0.7.10_linux_amd64.zip<br /><span class=\"token function\">mkdir</span> pocketbase_0.7.10_linux_amd64<br /><span class=\"token function\">mv</span> pocketbase_0.7.10_linux_amd64.zip pocketbase_0.7.10_linux_amd64<br /><span class=\"token builtin class-name\">cd</span> pocketbase_0.7.10_linux_amd64<br /><span class=\"token function\">unzip</span> pocketbase_0.7.10_linux_amd64.zip<br /><span class=\"token function\">chmod</span> +x pocketbase</code></pre>\n<p>You will note that I made a pocketbase_0.7.10_linux_amd64 directory where I stored all related files. This is done so that once an upgrade of PocketBase is released, I can unzip it in a different folder in /opt and run PocketBase from there instead.</p>\n<p>You can now run your server with the following command:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">./pocketbase serve --http<span class=\"token operator\">=</span><span class=\"token string\">\"yourdomain.com:80\"</span> --https<span class=\"token operator\">=</span><span class=\"token string\">\"yourdomain.com:443\"</span></code></pre>\n<p>However, you may wish to allow your application to start on its own or restart in case the process get killed. To do this, create a Systemd service.</p>\n<p>The following lines will create an empty pocketbase.service file in /lib/systemd/system and then open it in Nano.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">touch</span> /lib/systemd/system/pocketbase.service<br /><span class=\"token function\">nano</span> /lib/systemd/system/pocketbase.service</code></pre>\n<p>Now, paste the following code and exit and save. Make sure to change relevant information like <a href=\"http://yourdomain.com/\">yourdomain.com</a> and the installation directory if different.</p>\n<pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span><br />Description <span class=\"token operator\">=</span> pocketbase<br /><br /><span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span><br />Type           <span class=\"token operator\">=</span> simple<br />User           <span class=\"token operator\">=</span> root<br />Group          <span class=\"token operator\">=</span> root<br />LimitNOFILE    <span class=\"token operator\">=</span> <span class=\"token number\">4096</span><br />Restart        <span class=\"token operator\">=</span> always<br />RestartSec     <span class=\"token operator\">=</span> 5s<br />StandardOutput <span class=\"token operator\">=</span> append:/opt/pocketbase_0.7.10_linux_amd64/logs/access.log<br />StandardError  <span class=\"token operator\">=</span> append:/opt/pocketbase_0.7.10_linux_amd64/logs/errors.log<br />ExecStart      <span class=\"token operator\">=</span> /opt/pocketbase_0.7.10_linux_amd64/pocketbase serve --http<span class=\"token operator\">=</span><span class=\"token string\">\"yourdomain.com:80\"</span> --https<span class=\"token operator\">=</span><span class=\"token string\">\"yourdomain.com:443\"</span></code></pre>\n<p>You should now be able to enable and start the pocketbase service by running the following commands:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">systemctl <span class=\"token builtin class-name\">enable</span> pocketbase.service<br />systemctl start pocketbase<br />systemctl status pocketbase</code></pre>\n<p>This should result in the following:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">root@my-ubuntu:/opt/pocketbase_0.7.10_linux_amd64/logs<span class=\"token comment\"># service pocketbase status</span><br />● pocketbase.service - pocketbase<br />     Loaded: loaded <span class=\"token punctuation\">(</span>/lib/systemd/system/pocketbase.service<span class=\"token punctuation\">;</span> disabled<span class=\"token punctuation\">;</span> preset: enabled<span class=\"token punctuation\">)</span><br />     Active: active <span class=\"token punctuation\">(</span>running<span class=\"token punctuation\">)</span> since Tue <span class=\"token number\">2022</span>-11-08 04:40:57 UTC<span class=\"token punctuation\">;</span> 2s ago<br />   Main PID: <span class=\"token number\">1942</span> <span class=\"token punctuation\">(</span>pocketbase<span class=\"token punctuation\">)</span><br />      Tasks: <span class=\"token number\">6</span> <span class=\"token punctuation\">(</span>limit: <span class=\"token number\">511</span><span class=\"token punctuation\">)</span><br />     Memory: <span class=\"token number\">8</span>.0M<br />        CPU: 31ms<br />     CGroup: /system.slice/pocketbase.service<br />             └─1942 /opt/pocketbase_0.7.10_linux_amd64/pocketbase serve --http<span class=\"token operator\">=</span>yourdomain.com:80 --https<span class=\"token operator\">=</span>yourdomain.com:443</code></pre>\n<p>If you have done the above, you should be able to to access your PocketBase instance via the following urls:</p>\n<pre class=\"language-shell\"><code class=\"language-shell\">https://yourdomain.com/_/ - Admin dashboard UI<br />https://yourdomain.com/api - REST API</code></pre>\n<p>Note: if both the --http and --https flags are specified in the serve command defined above, PocketBase will provision an SSL certificate for your website using letsencrypt thus the website will be served from an https address.</p>\n<p>Links:</p>\n<ul>\n<li>[1] <a id=\"link-1\" href=\"https://docs.digitalocean.com/products/droplets/how-to/create/\">How to Create a Droplet from the DigitalOcean Control Panel</a></li>\n<li>[2] <a id=\"link-2\" href=\"https://docs.digitalocean.com/products/droplets/how-to/add-ssh-keys/\">How-to Add SSH Keys to New or Existing Droplets</a></li>\n<li>[3] <a id=\"link-3\" href=\"https://docs.digitalocean.com/products/networking/dns/quickstart/\">Dns Quickstart</a></li>\n<li>[4] <a id=\"link-4\" href=\"https://pocketbase.io/\">PocketBase</a></li>\n</ul>\n",
      "date_published": "2022-08-11T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/the-power-of-laziness-automating-some-text-entry-work/",
      "url": "https://mirzapandzo.com/posts/the-power-of-laziness-automating-some-text-entry-work/",
      "title": "The power of laziness - automating some text entry work",
      "content_html": "<p>I hate repetitive work. Read, copy, paste, edit, repeat. It's horribly monotonous and I always make a mistake that I have to go back and fix.</p>\n<p>As a friend of mine quipped once, perhaps humans invent stuff out of laziness? Some lazy bastard didn't want to walk so they invented the wheel. What's the remote control if not the quintessence of laziness - it's there because someone couldn't be bothered to get up and change the channel. The same goes for escalators, cars, telephones etc.</p>\n<p>All jesting aside, laziness of this kind is not for a lack of energy or care, it's about wanting to find easier, more efficient ways to accomplish something. And the art of programming is all about this exact practice. Finding solutions that will make the computer do the grunt work for you.</p>\n<p>I recently needed to convert an array of strings into an array of JSON objects. Along the way, I also needed to slugify the string and get rid of accents/diacritics - you know, convert letters like í,á,ü into i,a,u.</p>\n<p>My original array looked like this:</p>\n<pre class=\"language-json\"><code class=\"language-json\">const teamsLaLiga = <span class=\"token punctuation\">[</span><br />  <span class=\"token string\">\"Almería\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Athletic Bilbao\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Atlético Madrid\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Barcelona\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Cádiz\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Celta Vigo\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Elche\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Espanyol\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Getafe\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Girona\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Mallorca\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Osasuna\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Rayo Vallecano\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Real Betis\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Real Madrid\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Real Sociedad\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Sevilla\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Valencia\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Valladolid\"</span><span class=\"token punctuation\">,</span><br />  <span class=\"token string\">\"Villarreal\"</span><span class=\"token punctuation\">,</span><br /><span class=\"token punctuation\">]</span>;</code></pre>\n<p>Notice the <code>á</code> and <code>é</code> in Cádiz and Atlético Madrid.</p>\n<p>I wanted to achieve JSON in the form of:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> jsonTeams <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br />  <span class=\"token operator\">...</span><br />  <span class=\"token punctuation\">{</span><br />    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Atletico Madrid'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">displayName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Atlético Madrid'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">slug</span><span class=\"token operator\">:</span> <span class=\"token string\">'atletico-madrid'</span><br />    <span class=\"token literal-property property\">league</span><span class=\"token operator\">:</span> <span class=\"token string\">'la-liga'</span><span class=\"token punctuation\">,</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br />  <span class=\"token operator\">...</span><br /><span class=\"token punctuation\">]</span></code></pre>\n<p>Now, sure, this was a fairly small array, and I could have done the work manually, however, I wanted to do the same with Turkish Süper Lig team names like &quot;Fatih Karagümrük&quot; and &quot;İstanbul Başakşehir&quot;, and Portuguese Primeira liga team names like &quot;Marítimo&quot; and &quot;Paços de Ferreira&quot;. There'd be a lot of manual work involved.</p>\n<p>So, instead of manually copying, pasting and editing things for an hour, I quickly wrote a script to do the work for me. To get rid of accents/diacritics I used the lodash library's <a rel=\"bookmark nofollow\" href=\"https://docs-lodash.com/v4/deburr/\">deburr</a> method. To slugify titles I used the <a rel=\"bookmark nofollow\" href=\"https://www.npmjs.com/package/slugify\">slugify</a> library. Both were added to my simple script as script references via <a rel=\"bookmark nofollow\" href=\"https://cdn.jsdelivr.net/\">cdn.jsdelivr.net</a>.</p>\n<p>The html to achieve this looks like this:</p>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/slugify@1.6.5/slugify.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/lodash.deburr@4.1.0/index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br />  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br />  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br />    <span class=\"token keyword\">const</span> teamsLaLiga <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br />      <span class=\"token string\">\"Almería\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Athletic Bilbao\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Atlético Madrid\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Barcelona\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Cádiz\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Celta Vigo\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Elche\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Espanyol\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Getafe\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Girona\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Mallorca\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Osasuna\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Rayo Vallecano\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Real Betis\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Real Madrid\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Real Sociedad\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Sevilla\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Valencia\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Valladolid\"</span><span class=\"token punctuation\">,</span><br />      <span class=\"token string\">\"Villarreal\"</span><span class=\"token punctuation\">,</span><br />    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br /><br />    <span class=\"token keyword\">const</span> jsonTeams <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br />    teamsLaLiga<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">teamName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br />      jsonTeams<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br />        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token function\">deburr</span><span class=\"token punctuation\">(</span>teamName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br />        <span class=\"token literal-property property\">slug</span><span class=\"token operator\">:</span> <span class=\"token function\">slugify</span><span class=\"token punctuation\">(</span>teamName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">lower</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">remove</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[*+~.()'\"!:@]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><br />        <span class=\"token literal-property property\">displayName</span><span class=\"token operator\">:</span> teamName<span class=\"token punctuation\">,</span><br />        <span class=\"token literal-property property\">league</span><span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><br />      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br />    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonTeams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br />  </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span><br /><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>Note: the call to <code>slugify(teamName, { lower: true, remove: /[*+~.()'&quot;!:@]/g })</code> includes the remove option that takes a Regex expression to get rid of characters '*+~.()'&quot;!:@' when creating the slugs.</p>\n<p>The script above resulted in a JSON array formatted exactly as I wanted it:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Almería\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Almeria\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"almeria\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Athletic Bilbao\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Athletic Bilbao\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"athletic-bilbao\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Atlético Madrid\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Atletico Madrid\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"atletico-madrid\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Barcelona\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Barcelona\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"barcelona\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Cádiz\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Cadiz\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"cadiz\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Celta Vigo\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Celta Vigo\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"celta-vigo\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Elche\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Elche\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"elche\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Espanyol\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Espanyol\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"espanyol\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Getafe\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Getafe\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"getafe\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Girona\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Girona\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"girona\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Mallorca\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Mallorca\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"mallorca\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Osasuna\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Osasuna\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"osasuna\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Rayo Vallecano\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Rayo Vallecano\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"rayo-vallecano\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Real Betis\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Real Betis\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"real-betis\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Real Madrid\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Real Madrid\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"real-madrid\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Real Sociedad\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Real Sociedad\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"real-sociedad\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Sevilla\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Sevilla\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"sevilla\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Valencia\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Valencia\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"valencia\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Valladolid\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Valladolid\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"valladolid\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br />  displayName<span class=\"token operator\">:</span> <span class=\"token string\">\"Villarreal\"</span><span class=\"token punctuation\">,</span><br />  league<span class=\"token operator\">:</span> <span class=\"token string\">\"la-liga\"</span><span class=\"token punctuation\">,</span><br />  name<span class=\"token operator\">:</span> <span class=\"token string\">\"Villarreal\"</span><span class=\"token punctuation\">,</span><br />  slug<span class=\"token operator\">:</span> <span class=\"token string\">\"villarreal\"</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre>\n",
      "date_published": "2022-07-26T00:00:00Z"
    },{
      "id": "https://mirzapandzo.com/posts/sst-cannot-use-graphqlscalartype-boolean-from-another-module-or-realm/",
      "url": "https://mirzapandzo.com/posts/sst-cannot-use-graphqlscalartype-boolean-from-another-module-or-realm/",
      "title": "SST - Cannot use GraphQLScalarType &quot;Boolean&quot; from another module or realm",
      "content_html": "<p>I've been playing around with <a href=\"https://sst.dev/\">SST</a> over the last few days. SST is a &quot;framework that makes it easy to build serverless apps&quot;. It builds on top of the AWS CDK (Amazon's cloud development kit) and comes with a set of impressive features including a live lambda dev environment, a management dashboard, debugging with breakpoints in VS Code as well as out-of-the-box support for JS and TS (using esbuild), Go, Python, C#, and F#.</p>\n<p>SST is infrastructure-as-code on steroids. It comes with higher-level constructs designed specifically for serverless apps resulting in code that looks mighty impressive:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> sst <span class=\"token keyword\">from</span> <span class=\"token string\">'@serverless-stack/resources'</span><span class=\"token punctuation\">;</span><br /><br /><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StorageStack <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./StorageStack'</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ApiStack <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./ApiStack'</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthStack <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./AuthStack'</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> WebStack <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./WebStack'</span><span class=\"token punctuation\">;</span><br /><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CronStack <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./CronStack'</span><span class=\"token punctuation\">;</span><br /><br /><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">app</span><span class=\"token operator\">:</span> sst<span class=\"token punctuation\">.</span>App</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token comment\">// Set default runtime for all functions</span><br />  app<span class=\"token punctuation\">.</span><span class=\"token function\">setDefaultFunctionProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br />    <span class=\"token literal-property property\">runtime</span><span class=\"token operator\">:</span> <span class=\"token string\">'nodejs16.x'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">srcPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'services'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token literal-property property\">bundle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />      <span class=\"token literal-property property\">format</span><span class=\"token operator\">:</span> <span class=\"token string\">'esm'</span><span class=\"token punctuation\">,</span><br />    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><br />  app<br />    <span class=\"token punctuation\">.</span><span class=\"token function\">stack</span><span class=\"token punctuation\">(</span>StorageStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stack</span><span class=\"token punctuation\">(</span>ApiStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stack</span><span class=\"token punctuation\">(</span>AuthStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stack</span><span class=\"token punctuation\">(</span>CronStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stack</span><span class=\"token punctuation\">(</span>WebStack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br /><span class=\"token punctuation\">}</span></code></pre>\n<h2 id=\"cannot-use-graphqlscalartype-&quot;boolean&quot;-from-another-module-or-realm.\" tabindex=\"-1\">Cannot use GraphQLScalarType &quot;Boolean&quot; from another module or realm. <a class=\"direct-link\" href=\"https://mirzapandzo.com/posts/sst-cannot-use-graphqlscalartype-boolean-from-another-module-or-realm/#cannot-use-graphqlscalartype-%22boolean%22-from-another-module-or-realm.\" aria-hidden=\"true\">#</a></h2>\n<p>But I digress. While learning and ins-and-outs of the framework (I am nowhere near done), I used the <code>create sst</code> command to set up an app and followed the SST guide to add different stack constructs. I chose Vue.js for my web stack and managed to query the GraphQL endpoint without issue. I was playing with the Cron construct when I suddenly noticed the following error in my console:</p>\n<pre class=\"language-js\"><code class=\"language-js\">Failed to extract schema from pothos<br /><span class=\"token literal-property property\">Error</span><span class=\"token operator\">:</span> Cannot use GraphQLScalarType <span class=\"token string\">\"Boolean\"</span> from another module or realm<span class=\"token punctuation\">.</span><br /><br />Ensure that there is only one instance <span class=\"token keyword\">of</span> <span class=\"token string\">\"graphql\"</span> <span class=\"token keyword\">in</span> the node_modules<br />directory<span class=\"token punctuation\">.</span> If different versions <span class=\"token keyword\">of</span> <span class=\"token string\">\"graphql\"</span> are the dependencies <span class=\"token keyword\">of</span> other<br />relied on modules<span class=\"token punctuation\">,</span> use <span class=\"token string\">\"resolutions\"</span> to ensure only one version is installed<span class=\"token punctuation\">.</span><br /><br /><span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>yarnpkg<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>en<span class=\"token operator\">/</span>docs<span class=\"token operator\">/</span>selective<span class=\"token operator\">-</span>version<span class=\"token operator\">-</span>resolutions<br /><br />Duplicate <span class=\"token string\">\"graphql\"</span> modules cannot be used at the same time since different<br />versions may have different capabilities and behavior<span class=\"token punctuation\">.</span> The data from one<br />version used <span class=\"token keyword\">in</span> the <span class=\"token keyword\">function</span> from another could produce confusing and<br />spurious results<span class=\"token punctuation\">.</span><br />    at <span class=\"token function\">instanceOf</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>mirzapandzo<span class=\"token operator\">/</span>Projects<span class=\"token operator\">/</span>nonstopfootball<span class=\"token operator\">/</span>node_modules<span class=\"token operator\">/</span>graphql<span class=\"token operator\">/</span>jsutils<span class=\"token operator\">/</span>instanceOf<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">44</span><span class=\"token operator\">:</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><br />    at <span class=\"token function\">isScalarType</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>mirzapandzo<span class=\"token operator\">/</span>Projects<span class=\"token operator\">/</span>nonstopfootball<span class=\"token operator\">/</span>node_modules<span class=\"token operator\">/</span>graphql<span class=\"token operator\">/</span>type<span class=\"token operator\">/</span>definition<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">117</span><span class=\"token operator\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">)</span><br />    at <span class=\"token function\">sortNamedType</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>mirzapandzo<span class=\"token operator\">/</span>Projects<span class=\"token operator\">/</span>nonstopfootball<span class=\"token operator\">/</span>node_modules<span class=\"token operator\">/</span>graphql<span class=\"token operator\">/</span>utilities<span class=\"token operator\">/</span>lexicographicSortSchema<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">99</span><span class=\"token operator\">:</span><span class=\"token number\">36</span><span class=\"token punctuation\">)</span><br />    at <span class=\"token function\">keyValMap</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>mirzapandzo<span class=\"token operator\">/</span>Projects<span class=\"token operator\">/</span>nonstopfootball<span class=\"token operator\">/</span>node_modules<span class=\"token operator\">/</span>graphql<span class=\"token operator\">/</span>jsutils<span class=\"token operator\">/</span>keyValMap<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">29</span><span class=\"token operator\">:</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><br />    at <span class=\"token function\">lexicographicSortSchema</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>mirzapandzo<span class=\"token operator\">/</span>Projects<span class=\"token operator\">/</span>nonstopfootball<span class=\"token operator\">/</span>node_modules<span class=\"token operator\">/</span>graphql<span class=\"token operator\">/</span>utilities<span class=\"token operator\">/</span>lexicographicSortSchema<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">31</span><span class=\"token operator\">:</span><span class=\"token number\">44</span><span class=\"token punctuation\">)</span><br />    at Module<span class=\"token punctuation\">.</span><span class=\"token function\">generate</span> <span class=\"token punctuation\">(</span>file<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//Users/mirzapandzo/Projects/nonstopfootball/node_modules/@serverless-stack/core/dist/pothos/generate.js:149:40)</span><br />    at <span class=\"token function\">build</span> <span class=\"token punctuation\">(</span>file<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token comment\">//Users/mirzapandzo/Projects/nonstopfootball/node_modules/@serverless-stack/core/dist/cli/PothosBuilder.js:12:28)</span></code></pre>\n<p>I tried to revert code, Command+Z etc, but no luck. I was commenting things left, right and center but the error would not go away.</p>\n<p>Dax from the [SST discord] (<a href=\"https://discord.com/channels/983865673656705025/985224097342582865/997233904698277898\">https://discord.com/channels/983865673656705025/985224097342582865/997233904698277898</a>) mentioned this might be a node_modules conflict when asked about the issue a few days ago, however, I was intrigued why this problem was suddenly occurring for me when I was able to run GraphQL without issue only a few moments ago.</p>\n<p>Then it struck me! SST is configured with workspaces to hoist modules into the root node_modules folder. I had used yarn to install sst initially, but, while playing around with the Cron construct I went and used npm to install rss-parser (force of habit). As a result, this mixing of yarn and npm commands caused a conflict within my node_modules resulting in the above errors</p>\n<p>To fix the issue, I removed all node_modules folders with <code>rm -Rf node_modules</code> and used yarn to install. I was able to continue working and the conflict was resolved.</p>\n<p>Note: If this fix does not work for you, you may have to resort to adding a resolutions section to your graphql folder's package.json file as follows to force the use of the correct graphql library.</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"resolutions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token property\">\"graphql\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"16.5.0\"</span><br /><span class=\"token punctuation\">}</span></code></pre>\n",
      "date_published": "2022-07-24T00:00:00Z"
    }
  ]
}
